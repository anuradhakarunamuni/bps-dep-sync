<!--
 ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~      http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
-->
<%
var id = request.getParameter("id");
var headers = {"Authorization":"Basic " + auth};
var user = session.get("user");

try {
    var taskList = get( httpUrl + "/bpmn/history/historic-task-instances/" + id ,null, headers, "json" ).data;

    if (log.isDebugEnabled()) {
        log.debug("BPS BPMN REST API request: " + httpUrl + "/bpmn/history/historic-task-instances/" + id);
        log.debug("BPS BPMN REST API response: " + stringify(taskList));
    }

    //Check for error response
    if (taskList.errorMessage != undefined) {
        throw "Error " + taskList.statusCode + " : " + taskList.errorMessage;
    }

    var taskDesc = taskList.description;
    if (taskDesc == null) {
        taskDesc = "Description not available";
    }
    var taskOwner = taskList.owner;
    if (taskOwner == null) {
        taskOwner = "Not available";
    }
    var taskName = taskList.name;
    if (taskName == null) {
        taskName = "Task name not available";
    }
    var taskClaimTIme = taskList.claimTime;
    if(taskClaimTIme == null){
        taskClaimTIme = "Not available";
    }
    var taskDueDate = taskList.dueDate;
    if(taskDueDate == null){
        taskDueDate = "Not available";
    }
    var taskWorkTime = taskList.workTimeInMillis;
    if(taskWorkTime == null){
        taskWorkTime = "Not available";
    }

    var taskListData = {
        name:taskName,
        processInstanceId:taskList.processInstanceId,
        description:taskDesc,
        duration:taskList.durationInMillis,
        claimTime:taskClaimTIme,
        dueDate:taskDueDate,
        workTime:taskWorkTime,
        assignee:taskList.assignee,
        owner:taskOwner,
        definitionKey:taskList.taskDefinitionKey,
        tenantId:taskList.tenantId,
        executionId:taskList.executionId,
        priority:taskList.priority,
        deleteReason:taskList.deleteReason
    };
} catch (e) {
    if (log.isDebugEnabled()) {
        log.debug("User Error Occured : " + e);
    }
    //Enable and display error in common error display area in view
    commonErrorMessage = getCommonErrorContent(e);
    errorDisplayEnable = '';
}
%>